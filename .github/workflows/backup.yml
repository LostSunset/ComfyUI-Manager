name: Backup Fork and Sync

on:
  schedule:
    - cron: '0 0 * * 0'  # 每週日午夜運行一次
  workflow_dispatch:  # 允許手動觸發

jobs:
  backup-and-sync:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # 獲取所有歷史記錄和標籤
          token: ${{ secrets.PERSONAL_ACCESS_TOKEN }}  # 使用個人訪問令牌

      - name: List all branches
        id: list_branches
        run: |
          git fetch --all
          git branch -r | grep -v '\->' | grep 'origin/' | sed 's/origin\///' > branches.txt
          echo "branches=$(cat branches.txt | tr '\n' ' ')" >> $GITHUB_OUTPUT

      - name: Add upstream repository
        run: |
          git remote add upstream https://github.com/ltdrdata/ComfyUI-Manager.git
          git fetch upstream
          echo "Upstream repository added and fetched"

      - name: Configure Git
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          echo "Git configured"

      - name: Debug information
        run: |
          echo "Current branch: $(git branch --show-current)"
          echo "Remote repositories:"
          git remote -v
          echo "All branches:"
          git branch -a

      - name: Backup and sync each branch
        run: |
          for branch in $(echo "${{ steps.list_branches.outputs.branches }}"); do
            echo "Processing branch: $branch"
            git checkout $branch || git checkout -b $branch origin/$branch
            echo "Current branch after checkout: $(git branch --show-current)"
            git merge upstream/$branch --allow-unrelated-histories || echo "No changes to merge or merge conflict in $branch"
            git status
            git push origin $branch || echo "Failed to push $branch to origin"
          done
        env:
          GITHUB_TOKEN: ${{ secrets.PERSONAL_ACCESS_TOKEN }}

      - name: Create version tag
        run: |
          TIMESTAMP=$(date +"%Y%m%d%H%M%S")
          git tag -a "sync-$TIMESTAMP" -m "Sync on $TIMESTAMP"
          git push --tags origin || echo "Failed to push tags to origin"
          echo "Version tag created and pushed"

      - name: Check for errors
        if: failure()
        run: |
          echo "Workflow failed. Please check the logs for more information."
          git status
          git remote -v
